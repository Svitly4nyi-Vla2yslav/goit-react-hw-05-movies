{"version":3,"file":"static/js/186.28c284f0.chunk.js","mappings":"uOAEMA,EAAU,mCAGT,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,uFACkBC,EAAAA,EAAAA,IAAUD,GAD5B,cACCE,EADD,yBAEEA,EAASC,MAFX,kEAiBA,SAASC,EAAgBC,GAC9B,OAAON,EAAY,UAAD,OACNM,EADM,4BACqBP,EADrB,mBAGnB,CAEM,SAASQ,EAAgBD,GAC9B,OAAON,EAAY,UAAD,OACNM,EADM,4BACqBP,EADrB,mBAGnB,CA7BDG,EAAAA,EAAAA,SAAAA,QAAyB,+B,2HCuCzB,UApCgB,WAEd,OAA8BM,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQJ,GAAYK,EAAAA,EAAAA,MAAZL,QAcR,OAZAM,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAEEN,EAAAA,EAAAA,IAAgBD,GAFlB,OAEXF,EAFW,OAGjBM,EAAWN,EAAKU,SAHC,gDAKjBC,IAAAA,OAAAA,QAAwB,2DALP,yDAAH,qDAQlBF,GACD,GAAE,CAACP,KAGF,gCAAQG,EAAQO,QACd,wBACGP,EAAQQ,KAAI,YAA0B,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACtB,OACE,2BACE,uBAAID,KACJ,uBAAIC,MAFGD,EAKZ,OAGH,0EAIL,C","sources":["Api/ApiMovie.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst api_key = '0c1275ede1cd971eed12c7e14e906afa';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchMovies(endpoint) {\n  const response = await axios.get(endpoint);\n  return response.data;\n}\n\nexport function setTrendingMovies() {\n  return fetchMovies(`/trending/movie/day?api_key=${api_key}`);\n}\n\nexport function setSearchMovies(query) {\n  return fetchMovies(`/search/movie?api_key=${api_key}&query=${query}`);\n}\n\nexport function setMovieDetails(movieId) {\n  return fetchMovies(`/movie/${movieId}?api_key=${api_key}&language=en-US`);\n}\n\nexport function setMovieCredits(movieId) {\n  return fetchMovies(\n    `/movie/${movieId}/credits?api_key=${api_key}&language=en-US`\n  );\n}\n\nexport function setMovieReviews(movieId) {\n  return fetchMovies(\n    `/movie/${movieId}/reviews?api_key=${api_key}&language=en-US`\n  );\n}","import { setMovieReviews } from 'Api/ApiMovie';\nimport Notiflix from 'notiflix';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\n\nconst Reviews = () => {\n\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const data = await setMovieReviews(movieId);\n        setReviews(data.results);\n      } catch (error) {\n        Notiflix.Notify.failure('Sorry, something happened, try again later ðŸ˜•');\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <div>  {reviews.length ? (\n      <ul>\n        {reviews.map(({ author, content }) => {\n          return (\n            <li key={author}>\n              <p>{author}</p>\n              <p>{content}</p>\n            </li>\n          );\n        })}\n      </ul>\n    ) : (\n      <span>We don't have any reviews for this movie.</span>\n    )}\n    </div>\n  )\n}\n\nexport default Reviews;"],"names":["api_key","fetchMovies","endpoint","axios","response","data","setMovieCredits","movieId","setMovieReviews","useState","reviews","setReviews","useParams","useEffect","fetchReviews","results","Notiflix","length","map","author","content"],"sourceRoot":""}