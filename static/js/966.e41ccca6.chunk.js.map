{"version":3,"file":"static/js/966.e41ccca6.chunk.js","mappings":"+QAIaA,EAAgB,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAC7B,OACE,iCACE,4BACE,gBACEC,IACwB,OAAtBD,EAAME,YAAN,8CAC2CF,EAAME,aAC7CC,EAENC,IAAKJ,EAAMK,QAEb,4BACE,2BACE,0BACGL,EAAMM,MADT,eACqBN,EAAMO,aAAaC,MAAM,EAAG,GADjD,SAGA,wCACeC,KAAKC,MAA2B,GAArBV,EAAMW,cADhC,WAIF,4BACE,sCACA,uBAAIX,EAAMY,eAEZ,4BACE,oCACA,uBACGZ,EAAMa,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMV,IAAV,IAAgBW,mBAK/C,4BACE,oDACA,oBAAQC,KAAK,SAAb,WACE,yBACE,SAAC,KAAD,CAAMC,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,8BAIN,SAAC,EAAAC,SAAD,CAAUC,UAAU,8CAApB,UACE,SAAC,KAAD,QAIP,E,kBChBD,EA/BqB,WAAO,IAAD,IACnBC,GAAWC,EAAAA,EAAAA,MACXC,GAAUC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KACzCC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAO7B,EAAP,KAAc8B,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,8GAEIC,EAAAA,EAAAA,GAAgBJ,GAFpB,OAETK,EAFS,OAGfN,EAASM,GAHM,gDAKfT,EAAS,KACTU,IAAAA,OAAAA,QAAwB,2DANT,yDAAH,qDAShBH,GACD,GAAE,CAACH,EAASJ,KAGX,iCACE,SAAC,KAAD,CAAMT,GAAIK,EAAQe,QAAlB,qBAICtC,IAAS,SAACD,EAAD,CAAeC,MAAOA,MAGrC,C","sources":["components/MovieDetails/MoviesDetails.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["import React, { Suspense } from 'react'\nimport image from '../../images/no_image.ac6f3f0dddec64fc8ae6.jpg'\nimport { Link, Outlet } from 'react-router-dom';\n\nexport const MoviesDetails = ({movie}) => {\n  return (\n    <>\n      <div>\n        <img\n          src={\n            movie.poster_path !== null\n              ? `https://image.tmdb.org/t/p/original/${movie.poster_path}`\n              : image\n          }\n          alt={movie.name}\n        />\n        <div>\n          <h1>\n            <h2>\n              {movie.title} {`(${movie.release_date.slice(0, 4)})`}\n            </h2>\n            <p>\n              User score: {Math.round(movie.vote_average * 10)}%\n            </p>\n          </h1>\n          <div>\n            <h3>Overview</h3>\n            <p>{movie.overview}</p>\n          </div>\n          <div>\n            <h4>Genres</h4>\n            <p>\n              {movie.genres.map(genre => genre.name).join()}\n            </p>\n          </div>\n        </div>\n      </div>\n      <div>\n        <h5>Additional information</h5>\n        <button type='button'>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </button>\n      </div>\n      <Suspense fallback={<div>Loading...‚è≥</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n\n","import { setMovieDetails } from 'Api/ApiMovie';\nimport { MoviesDetails } from 'components/MovieDetails/MoviesDetails';\nimport Notiflix from 'notiflix';\nimport { useRef, useState, useEffect } from 'react';\nimport { useParams, useLocation, useNavigate, Link } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const backBtn = useRef(location.state?.from ?? '/');\n  const navigate = useNavigate();\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        const data = await setMovieDetails(movieId);\n        setMovie(data);\n      } catch (error) {\n        navigate('*');\n        Notiflix.Notify.failure('Sorry, something happened, try again later üòï');\n      }\n    };\n    fetchMovie();\n  }, [movieId, navigate]);\n\n  return (\n    <>\n      <Link to={backBtn.current}>\n        \n        Go back\n      </Link>\n      {movie && <MoviesDetails movie={movie} />}\n    </>\n  );\n};\n\nexport default MovieDetails;"],"names":["MoviesDetails","movie","src","poster_path","image","alt","name","title","release_date","slice","Math","round","vote_average","overview","genres","map","genre","join","type","to","Suspense","fallback","location","useLocation","backBtn","useRef","state","from","navigate","useNavigate","useState","setMovie","movieId","useParams","useEffect","fetchMovie","setMovieDetails","data","Notiflix","current"],"sourceRoot":""}