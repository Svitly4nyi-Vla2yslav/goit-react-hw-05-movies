{"version":3,"file":"static/js/186.8db479fa.chunk.js","mappings":"0OA0CA,UApCgB,WAEd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAEEC,EAAAA,EAAAA,IAAgBJ,GAFlB,OAEXK,EAFW,OAGjBN,EAAWM,EAAKC,SAHC,gDAKjBC,IAAAA,OAAAA,QAAwB,2DALP,yDAAH,qDAQlBJ,GACD,GAAE,CAACH,KAGF,gCAAQF,EAAQU,QACd,wBACGV,EAAQW,KAAI,YAA0B,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACtB,OACE,2BACE,uBAAID,KACJ,uBAAIC,MAFGD,EAKZ,OAGH,0EAIL,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { setMovieReviews } from 'Api/ApiMovie';\nimport Notiflix from 'notiflix';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\n\nconst Reviews = () => {\n\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const data = await setMovieReviews(movieId);\n        setReviews(data.results);\n      } catch (error) {\n        Notiflix.Notify.failure('Sorry, something happened, try again later ðŸ˜•');\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <div>  {reviews.length ? (\n      <ul>\n        {reviews.map(({ author, content }) => {\n          return (\n            <li key={author}>\n              <p>{author}</p>\n              <p>{content}</p>\n            </li>\n          );\n        })}\n      </ul>\n    ) : (\n      <span>We don't have any reviews for this movie.</span>\n    )}\n    </div>\n  )\n}\n\nexport default Reviews;"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","fetchReviews","setMovieReviews","data","results","Notiflix","length","map","author","content"],"sourceRoot":""}